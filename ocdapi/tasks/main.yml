---
#- name: nginx key
#  apt_key: url=http://nginx.org/keys/nginx_signing.key
#- name: nginx repo
#  apt_repository: repo="deb http://nginx.org/packages/ubuntu/ xenial nginx"
- name: install system packages
  apt: pkg={{item}} update_cache=yes
  with_items:
      - build-essential
      - git
      - mercurial
      - python-pycurl
      - python-boto
      - libpq-dev
      - unzip
      - gdal-bin
      - python3
      - python3-dev
      - virtualenv
      - uwsgi
      - nginx
      - uwsgi-plugin-python3
      - libxslt-dev
- name: make project dir
  file: path=/home/ocdapi state=directory
- name: add project user
  user: name=ocdapi home=/home/ocdapi shell=/bin/bash state=present
- name: chown user directory
  file: path=/home/ocdapi owner=ocdapi
- name: add user subdirectories
  file: path=/home/ocdapi/{{item}} owner=ocdapi state=directory
  with_items:
    - logs
    - data
  sudo_user: "ocdapi"
- name: add env_vars for project user
  template: src=env_vars.j2 dest=/home/ocdapi/env_vars mode=640
  sudo_user: "ocdapi"
- name: create virtualenv
  command: virtualenv -p python3.5 /home/ocdapi/virt{{ ansible_date_time.date }}-{{ ansible_date_time.hour }}-{{ ansible_date_time.minute }}
  sudo_user: "ocdapi"
  notify:
    - restart django-application
- name: checkout project directories
  git: repo=https://github.com/opencivicdata/api.opencivicdata.org.git dest=/home/ocdapi/src/ocdapi accept_hostkey=yes version=master
  sudo_user: "ocdapi"
  notify:
    - restart django-application
- name: add checkouts to python path
  lineinfile: dest=/home/ocdapi/virt{{ansible_date_time.date }}-{{ ansible_date_time.hour }}-{{ ansible_date_time.minute }}/lib/python3.5/site-packages/checkouts.pth create=yes state=present line=/home/ocdapi/src/ocdapi
  sudo_user: "ocdapi"
- name: install requirements
  pip: requirements=/home/ocdapi/src/ocdapi/requirements.txt virtualenv=/home/ocdapi/virt{{ansible_date_time.date }}-{{ ansible_date_time.hour }}-{{ ansible_date_time.minute }}
  sudo_user: "ocdapi"
  notify:
    - restart django-application
- name: uninstall Django 1.10
  pip: name=Django state=absent virtualenv=/home/ocdapi/virt{{ansible_date_time.date }}-{{ ansible_date_time.hour }}-{{ ansible_date_time.minute }}
  sudo_user: "ocdapi"
  notify:
    - restart django-application
- name: install Django 1.9
  pip: name=Django version=1.9.11 state=present virtualenv=/home/ocdapi/virt{{ansible_date_time.date }}-{{ ansible_date_time.hour }}-{{ ansible_date_time.minute }}
  sudo_user: "ocdapi"
  notify:
    - restart django-application
- name: link virtualenv
  file: src=/home/ocdapi/virt{{ ansible_date_time.date }}-{{ ansible_date_time.hour }}-{{ ansible_date_time.minute }} dest=/home/ocdapi/virt state=link
- name: write uwsgi template
  template: src=uwsgi.j2 dest=/etc/uwsgi/apps-enabled/ocdapi.ini
  notify:
    - restart django-application
- name: make certs dir
  file: path=/etc/nginx/certs/ state=directory
#- name: copy ssl cert over
#  copy: src=ec2/openstates.crt dest=/etc/nginx/certs/openstates.crt mode=0644
#- name: copy ssl key over
#  copy: src=ec2/openstates.key dest=/etc/nginx/certs/openstates.key mode=0644
- name: remove nginx default config
  file: path=/etc/nginx/sites-enabled/default state=absent
- name: generate dh params
  command: openssl dhparam -out /etc/nginx/certs/dhparams.pem 2048 creates=/etc/nginx/certs/dhparams.pem
- name: write nginx template
  template: src=nginx.j2 dest=/etc/nginx/sites-enabled/ocdapi
  notify:
    - restart nginx
- name: generate new relic config
  command: /home/ocdapi/virt/bin/newrelic-admin generate-config {{ newrelic_key }} /home/ocdapi/newrelic.ini creates=/home/ocdapi/newrelic.ini nginx is running and starts on boot
- name: rename new relic app
  replace: dest=/home/ocdapi/newrelic.ini regexp='Python Application' replace='geo.openstates.org'
- name: ensure nginx is running and starts on boot
  service: name=nginx state=restarted enabled=yes
- name: start uwsgi
  service: name=uwsgi state=started args=ocdapi
