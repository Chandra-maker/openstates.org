---
- name: install system packages
  apt: pkg={{item}} update_cache=yes
  with_items:
      - build-essential
      - git
      - mercurial
      - python-pycurl
      - python-boto
      - libpq-dev
      - unzip
      - gdal-bin
      - python
      - python-dev
      - virtualenv
      - uwsgi
      - nginx
      - uwsgi-plugin-python
      - libxslt-dev
      - letsencrypt
- name: add localhost alias
  lineinfile: dest=/etc/hosts line='127.0.0.1 openstates.org'
- name: add beta.openstates.org alias
  lineinfile: dest=/etc/hosts line='{{internal_beta_ip}} beta.openstates.org'
- name: make project dir
  file: path=/home/openstates state=directory
- name: add project user
  user: name=openstates home=/home/openstates shell=/bin/bash state=present
- name: chown user directory
  file: path=/home/openstates owner=openstates
- name: add user subdirectories
  file: path=/home/openstates/{{item}} owner=openstates state=directory
  with_items:
    - data
    - letsencrypt
  sudo_user: "openstates"
- name: add env_vars for project user
  template: src=env_vars.j2 dest=/home/openstates/env_vars mode=640
  sudo_user: "openstates"

# letsencrypt
- name: add letsencrypt renewal crontab
  cron: job="letsencrypt renew" special_time="daily" name="renew certificate"
- name: restart nginx weekly
  cron: job="systemctl restart nginx" special_time="weekly" name="restart nginx"
- name: archive letsencrypt stuff
  cron: job='bash -c "tar cvf /tmp/le$(date +\%Y\%m\%d).gz /etc/letsencrypt/ && aws s3 cp /tmp/le$(date +\%Y\%m\%d).gz s3://openstates-backups/letsencrypt/ && rm /tmp/le$(date +\%Y\%m\%d).gz"' special_time="monthly" name="backup letsencrypt"

# virtualenv
- name: checkout project directories
  git: repo=https://github.com/openstates/openstates.org.git dest=/home/openstates/src/openstates.org accept_hostkey=yes version=master
  sudo_user: "openstates"
  notify:
    - restart django-application
  register: gitresult
- name: create virtualenv
  command: virtualenv -p python2.7 /home/openstates/virt{{ gitresult.after }}
  sudo_user: "openstates"
  notify:
    - restart django-application
- name: add checkouts to python path
  lineinfile: dest=/home/openstates/virt{{ gitresult.after }}/lib/python2.7/site-packages/checkouts.pth create=yes state=present line=/home/openstates/src/openstates.org
  sudo_user: "openstates"
- name: install requirements
  pip: requirements=/home/openstates/src/openstates.org/requirements.txt virtualenv=/home/openstates/virt{{ gitresult.after }}
  sudo_user: "openstates"
  notify:
    - restart django-application
- name: link virtualenv
  file: src=/home/openstates/virt{{ gitresult.after }} dest=/home/openstates/virt state=link

# nginx
- name: make certs dir
  file: path=/etc/nginx/certs/ state=directory
- name: generate dh params
  command: openssl dhparam -out /etc/nginx/certs/dhparams.pem 2048 creates=/etc/nginx/certs/dhparams.pem
- name: remove nginx default config
  file: path=/etc/nginx/sites-enabled/default state=absent
- name: write nginx template
  template: src=nginx.j2 dest=/etc/nginx/sites-enabled/openstates
  notify:
    - restart nginx
- name: ensure nginx is running and starts on boot
  service: name=nginx state=restarted enabled=yes

# new relic
- name: generate new relic config
  command: /home/openstates/virt/bin/newrelic-admin generate-config {{ newrelic_key }} /home/openstates/newrelic.ini creates=/home/openstates/newrelic.ini
- name: rename new relic app
  replace: dest=/home/openstates/newrelic.ini regexp='Python Application' replace='openstates.org'

# django
- name: collectstatic
  command: /home/openstates/virt/bin/python manage.py collectstatic --settings=openstates.settings --noinput chdir=/home/openstates/src/openstates.org
  environment: '{{django_environment}}'
- name: migrate
  command: /home/openstates/virt/bin/python manage.py migrate --settings=openstates.settings --noinput chdir=/home/openstates/src/openstates.org
  environment: '{{django_environment}}'
- name: create Site
  command: echo "from django.contrib.sites.models import Site;Site.objects.get_or_create(domain='openstates.org', name='openstates.org')" | /home/openstates/virt/bin/python manage.py shell --settings=openstates.settings chdir=/home/openstates/src/openstates.org
  environment: '{{django_environment}}'

# uwsgi
- name: write uwsgi template
  template: src=uwsgi.j2 dest=/etc/uwsgi/apps-enabled/openstates.ini
  notify:
    - restart django-application
- name: start uwsgi
  service: name=uwsgi state=started args=openstates
